#
# Author: Wei Yang (SLAC National Accelerator Laboratory / Stanford University, 2017)
#

Bootstrap: yum
OSVersion: 7
MirrorURL: http://mirror.centos.org/centos-%{OSVERSION}/%{OSVERSION}/os/$basearch/
Include: yum

%labels
Maintainer Wei.Yang
Version Xcache-CVMFS-0.1
Purpose Xcache-for-CVMFS

%setup
  mkdir -p $SINGULARITY_ROOTFS/etc/grid-security/certificates 
  mkdir -p $SINGULARITY_ROOTFS/etc/grid-security/vomsdir

%post
  yum install -y curl gperftools hostname vi gdb

  curl -s -o /etc/yum.repos.d/xrootd-stable-slc7.repo http://www.xrootd.org/binaries/xrootd-stable-slc7.repo
  curl -s -o /etc/pki/rpm-gpg/RPM-GPG-KEY-wlcg http://linuxsoft.cern.ch/wlcg/RPM-GPG-KEY-wlcg
  curl -s -o /etc/yum.repos.d/wlcg-centos7.repo http://linuxsoft.cern.ch/wlcg/wlcg-centos7.repo

  yum install -y xrootd-server xrootd-client xrootd xrootd-debuginfo
  yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
  mkdir -p /data 

  touch /etc/xrootd/auth_db
  mkdir -p /etc/grid-security/xrd
  touch /etc/grid-security/xrd/xrdcert.pem
  touch /etc/grid-security/xrd/xrdkey.pem

  touch /etc/xrootd/xcache4cvmfs.cfg /var/run/x509up
# if SLAC
  ln -s /data /xrdcache
# fi
  cat > /etc/xrootd/xcache.cfg.template <<EOF
all.export   /cvmfs r/o
oss.path     /cvmfs r/w

xrd.protocol http:3000 /usr/lib64/libXrdHttp.so
xrd.port any

oss.localroot  /data/cvmfs/namespace
oss.space meta /data/cvmfs/xrdcinfos
# if SLAC 
oss.space data /xrdcache/slot12
oss.space data /xrdcache/slot13
oss.space data /xrdcache/slot14
# else comment the above lines and uncomment the following
#oss.space data /data/cvmfs/datafiles
# fi

ofs.osslib   /usr/lib64/libXrdPss.so
pss.cachelib /usr/lib64/libXrdFileCache.so
pss.config streams 16
pss.origin CVMFS_STRATUM1

pfc.ram XCACHE_RAMSIZE
pfc.diskusage XCACHE_SPACE_LO_MARK XCACHE_SPACE_HI_MARK
pfc.spaces data meta
pfc.blocksize 4M
pfc.prefetch 0
pfc.trace info

all.adminpath /data/cvmfs/var/spool/xrootd
all.pidpath   /data/cvmfs/var/run/xrootd
EOF

# cleaning script to delete file in "filelist" periodically
  cat > /clean-cvmfs-root.sh <<EOF
#!/bin/sh

prefix="/data/cvmfs/namespace/cvmfs"

repolist=\`echo \$prefix/*\`
filelist=".cvmfspublished .cvmfswhitelist .cvmfs_status.json"

delete() {
    file=\$1
    link=\`readlink \$file\`
    rm -f \$file \$link
}

while [ 0 -eq 0 ]; do
    for repo in \$repolist; do
        for file in \$filelist; do
            file=\$repo/\$file
            delete \$file
            delete \$file.cinfo
        done
    done
    sleep 600
done
EOF

%runscript
# X509_USER_PROXY, X509_CERT_DIR, X509_VOMS_DIR do not have to be defined/provided

# if x509 user proxy is provided in a non-standard location (/tmp/x509up_u$(id -u)), 
# then the proxy should be bind mounted: -B ${X509_USER_PROXY}:/var/run/x509up

unset X509_USER_PROXY
[ -s /var/run/x509up ] && export X509_USER_PROXY=/var/run/x509up

# if X509_CERT_DIR is not defined, or is inaccessible in the container, then we use
# the default location. Same for X509_VOMS_DIR.
# One can also bind mount:
#     -B ${X509_CERT_DIR}:/etc/grid-security/certificates
#     -B ${X509_VOMS_DIR}:/etc/grid-security/vomsdir

[ ! -z "$X509_CERT_DIR" ] && [ ! -d "$X509_CERT_DIR" ] && export X509_CERT_DIR=/etc/grid-security/certificates
[ ! -z "$X509_VOMS_DIR" ] && [ ! -d "$X509_VOMS_DIR" ] && export X509_VOMS_DIR=/etc/grid-security/vomsdir 
 
mkdir -p /data/cvmfs/namespace /data/cvmfs/cvmfscinfos /data/cvmfs/datafiles
mkdir -p /data/cvmfs/var/log /data/cvmfs/var/spool /data/cvmfs/var/run

if [ -z "$XCACHE_PFCRAM" ]; then
  XCACHE_PFCRAM=$(free | tail -2 | head -1 | awk '{printf("%d", $NF/1024/1024/8)}')
  [ $XCACHE_PFCRAM -lt 1 ] && XCACHE_PFCRAM=1
  XCACHE_PFCRAM=${XCACHE_PFCRAM}g
fi
[ -z "$XCACHE_SPACE_LO_MARK" ] && XCACHE_SPACE_LO_MARK="0.75"
[ -z "$XCACHE_SPACE_HI_MARK" ] && XCACHE_SPACE_HI_MARK="0.85"
if [ -z "$CVMFS_STRATUM1" ]; then
  echo "Please define CVMFS_STRATUM1 to something like cvmfs-replica.racf.bnl.gov:1094, and try it again!"
  exit 1
fi

if [ -s /etc/xrootd/xcache4cvmfs.cfg ]; then
  xcache_cfg=/etc/xrootd/xcache4cvmfs.cfg
else
  xcache_cfg=/tmp/xcache4cvmfs.cfg
  cat > $xcache_cfg <<EOF
# Xcache config file - this file is automatically generated
# Modification of this file will be lost.
#
# To make a persistant change, modify and save to another file and then 
# bind mount the new config file to /etc/xrootd/xcache.cfg

# Info about the system:

EOF

  free | sed -e 's/^/\#\ /g' >> $xcache_cfg
  echo "" >> $xcache_cfg
  df -k /data | sed -e 's/^/\#\ /g' >> $xcache_cfg
  echo "" >> $xcache_cfg
  cat /etc/xrootd/xcache.cfg.template | sed -e "s/XCACHE_SPACE_LO_MARK/$XCACHE_SPACE_LO_MARK/g" | \
                                        sed -e "s/XCACHE_SPACE_HI_MARK/$XCACHE_SPACE_HI_MARK/g" | \
                                        sed -e "s/XCACHE_RAMSIZE/$XCACHE_PFCRAM/g" | \
                                        sed -e "s/CVMFS_STRATUM1/$CVMFS_STRATUM1/g" >> $xcache_cfg
fi

#echo $X509_USER_PROXY $X509_CERT_DIR $X509_VOMS_DIR

export LD_PRELOAD=/usr/lib64/libtcmalloc.so
export TCMALLOC_RELEASE_RATE=10
export XRD_LOCALMETALINKFILE=1
sh /clean-cvmfs-root.sh &
/usr/bin/xrootd -b -c $xcache_cfg -l /data/cvmfs/var/log/xrootd.log -k 7
